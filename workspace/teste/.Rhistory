pwm
library(seqLogo); seqLogo(t(t(pwm) * 1/colSums(pwm))
dsfs
library(seqLogo)
seqLogo(t(t(pwm) * 1/colSums(pwm)))
pwm
PWM(DNA)
DNA
DNA
PWM(DNA)
?PWM(DNA)
PWM(DNA)?
PWM(DNA)?
PWM(DNA)
PWM(DNA)
seqLogo(t(t(pwm) * 1/colSums(pwm)))
library(seqLogo)
seqLogo(t(t(pwm) * 1/colSums(pwm)))
DNA
PWM(DNA)source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\Teste.R")
DNA
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\Teste.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\Teste.R")
PWM
DNA
alphabetFrequency(DNA)
alphabetFrequency(t(DNA))
t(DNA)
t(DNA[1])
t(DNA[[1]])
DNA[1]
DNA[[1]]
pwm
pwm'
alphabetFrequency(myseq1)
w
p
t(pwm)
DNA
maxScore(pwm)
maxScore(pwm)
minScore(pwm)
maxWeights(pwm)
minWeights(pwm)
minWeights(source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R"))
(source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R"))
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
max1
DNA <- DNAStringSet(c("ACCTAGGTGT", "GTAGTACCTG", "GTAACCTGAG"))
DNA
DNA[[1]]
DNA1 <- DNAStringSet(c("ACCT", "GTAG", "GTAA"))
PWM(DNA1)
DNA2 <- DNAStringSet(c("ACCT", "TAGT", "TAAC"))
PWM(DNA2)
p1 <- PWM(DNA2)
p1 <- PWM(DNA1)
p2 <- PWM(DNA2)
p1
p1 < p2
p1 == p2
DNA3 <- DNAStringSet(c("ACCT", "ACCT", "CTGA"))
p3 = PWM(DN3)
p3 <- PWM(DN3)
p3 <- PWM(DNA3)
p3
p3 > p1
p1
maxWeights(p3)
maxWeights(p1)
maxWeights(p2)
maxWeights(p2) > maxWeights(p3)
maxWeights(p2) < maxWeights(p3)
maxWeights(p2) > maxWeights(p3)
minWeights(p2) > minWeights(p3)
minWeights(p2) < minWeights(p3)
minWeights(p2) 
minWeights(p3) 
maxScore(p2)
maxScore(p1)
maxScore(p3)
minWeights(p2) 
minWeights(p3) 
maxWeights(p2) > maxWeights(p3)
maxWeights(p2) < maxWeights(p3)
p1
p2
p3
DNA4 <- DNAStringSet(c("AAAA", "CCCC", "GGGG"))
p4 = PWM(DNA4)
p4
maxWeights(p4)
maxWeights(p4) < maxWeights(p3)
maxWeights(p4) > maxWeights(p3)
maxWeights(p4) == maxWeights(p3)
toString(DNA[[1]])
v = toString(DNA[[1]])
v
v[1]
v[2]
v[[1]]
v[1:2]
v[1:2]
t(v)
f ="TAGAGAGAGG"
f
append(t(v),t(f))
s = append(t(v),t(f))
s
s = append(v,f)
s
t(s)
s = t(s)
s
t(s)
alphabetFrequency(t(s))
alphabetFrequency(s)
alphabetFrequency(s[1])
alphabetFrequency("AGAAGAGAG")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\Teste.R")
citation()
citation("pkgname")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
# split x on the letter e
strsplit(x, "e")
## a useful function: rev() for strings
strReverse <- function(x)
        sapply(lapply(strsplit(x, NULL), rev), paste, collapse="")
strReverse(c("abc", "Statistics"))
a = "adhksfjdh"
a
t(a)
t(t(a))
t(a)
t(t(a))
t(t(t(a)))
a
a(1)
a(1:2)
a[1]
a[1:2]
library(Biostrings)
d <- DNAString("GCATATGTAC")
dd
d
d[1:4]
subseq(d, start=1)
subseq(d, start=1, end 6)
subseq(d, start=1, end=6)
subseq(d, start=1, end=6)
subseq(d, start=1, end=4)
dlong <- DNAString("GCATATTACAATCGATCCGCATATTAC")
dsub <- Views(dlong, start = c(1,6,11,20), end = c(5,8,18,27))
dsub
dsub[1:2]
dsub[1]
dsub[[1]]
d = [1 2 3]
d = [1, 2 ,3]
d = (1, 2 ,3)
d
pos <- 1 2 3
pos <- 1, 2, 3
pos <- {1, 2, 3}
pos <- [1, 2, 3]
pos <- ["1, 2, 3"]
pos <- 1
pos <- 1,2
pos <- 1:4
pos
pos[1]
d
DNA
length(DNA)
DNA[[1]]
DNA[[1]][1:1+1]
DNA[[1]][1:1]
seq <- c(DNA[[1]][1:1])
seq
seq <- c(DNA[[1]][2:2])
seq
seq <- append (seq, DNA[[1]][2:2])
seq
seq <- append (seq, DNA[[1]][1:1])
seq
seq <- append (seq, DNA[[1]][1:1])
alphabetFrequency(DNA[[1]])
a = alphabetFrequency(DNA[[1]])
a
sum(a)
a = alphabetFrequency(DNA)
a
a = alphabetFrequency(DNA[[1]])
max(a)
for (i=3 in 1:3) {
for (i=3 in 1:3) print i
for (i in 1:3) print i
for (i in 1:3) print "i"
for (i in 1:3) print
for (i in 1:3) print DNA
for (i in 1:3) print 
for (i=2 in 1:3) print 
for (i<-3 2 in 1:3) print 
maxScore(DNA)
maxScore(DNA$1)
DNA$1
DNA$A
A = C = G = T = 0
A
C
A = C = G = T = 3
A
C
G
T
T = 9
G
v <- (A,C,G,T)
v <- c(A,C,G,T)
v
max(v)
ghgj <- 
D
josue <- append (josue, DNA[[1]][1:1])
josue <- 0
josue <- append (josue, DNA[[1]][1:1])
josue
A = C = G = T <- 0
A = C = G <- T <- 4
C
res = 0
res
res = res + max(v)
res
length(DNA[1])
length(DNA[[1]])
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
library(Biostrings)
#TODO fazer validações sobre o tamanho do dnaSet e bases do DNA
score(dnaSet) 
{
resul <- 0 
A <- C <- G <- T <- 0
len <- lenght(dnaSet)
motifSize <- lenght(dnaSet[[1]])
for(j in 1:motifSize){
k <- j
for(i in 1:len){
letter <- dnaSet[[i]][k:k]
if(letter == "A"){
A <- A + 1
}else if (letter == "C") {
C <- C + 1
}else if (letter == "G") {
G <- G + 1
}else if (letter == "T") {
T <- T + 1 
}
}
posScore <- c(A,C,G,T)
resul <- resul + max(posScore)
}
return(resul)
}
DNA <- DNAStringSet(c("ACCTAGGTGT", "GTAGTACCTG", "GTAACCTGAG"))
score(DNA)
ls()
rm(list=ls(all=TRUE))
ls()
search()
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
lengtsource("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")h
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
letter
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
l
l <- DNA[[1]][1:1]
l
l == "A"
l == DNAString("A")
l == DNAString("G")
l == DNAString("a")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
DNa
DNA
PWM(DNA)
pwm = PWM(DNA)
maxScore(pwm)
maxWeights(pwm)
v = maxWeights(pwm)
sum(v)
v
max(v)
length(DNA)
length(DNA[1])
length(DNA[[1]])
length(DNA[[1]])
factorial(21)
factorial(2)
factorial(1)
factorial(3)
factorial(21)/factorial(19)
49 * 7
factorial(10)/factorial(8)
DNa
DNA
DNA[[1]]
DNA[[1]][1:2]
DNA[[1]][1:(2-1)+4]
DNA[[1]][2:(2-1)+4]
DNA[[1]][2:((2-1)+4)]
DNA[[1]][2:(2-1)+4]
seq <- DNA[[1]][2:(2-1)+4]
dnaTem <- append(dnaTem,seq)
dnaTem <- DNAStringSet()
dnaTem <- append(dnaTem,seq)
seq
dnaTem
dnaTem <- append(dnaTem,seq)seq
awq
seq
DNAStringSet(seq)
DNAStringSet(seq)
dnaTem <- append(dnaTem,DNAStringSet(seq))
dnaTem
dnaTem <- append(dnaTem,DNAStringSet(seq))
dnaTem <- append(dnaTem,DNAStringSet(seq))
dnaTem <- append(dnaTem,DNAStringSet(seq))
dnaTem
mf <- 0
append(mf,1)
append(mf,3)
append(mf,4)
mf
mf <- vector()
mf
append(mf,4)
mf <- append(mf,4)
mf <- append(mf,3)
mf <- append(mf,2)
mf <- append(mf,1)
mf
mf <- vector()
mf[1] = 9
mf
mf[3] = 94
mf
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
DNA
DNA[[4]][4:((4 -1)+l)]
DNA[[4]][4:4]
DNA[[4]][4:5]
DNA[[3]][4:5]
DNA[[3]][4:4]
DNA[[3]][4:((4 -1)+l)]
DNA[[3]][4:((4 -1)+4)]
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
DNA
df =DNA
df
df[[3]]  = "234232"
df[[3]]  = "AGAAGA"
df[[3]]  = DNAString(c("AGAAGAG"))
df
dnaSetTemp <- append(dnaSetTemp,DNAStringSet())
dnaSetTemp <- DNAStringSet()
dnaSetTemp <- append(dnaSetTemp,DNAStringSet())
dnaSetTemp
dnaSetTemp <- append(dnaSetTemp,DNAStringSet())
dnaSetTemp
dnaSetTemp <- append(dnaSetTemp,DNAStringSet("agaga"))
dnaSetTemp <- append(dnaSetTemp,DNAStringSet())
dnaSetTemp
dnaSetTemp[[2]] = DNAString("GAGAGAG")
dnaSetTemp[[2]]
dnaSetTemp[[1]]
dnaSetTemp[[2]] = DNAString("")
dnaSetTemp <- append(dnaSetTemp,DNAStringSet(""))
dnaSetTemp
dnaSetTemp[[2]] = DNAString("AGAGAG")
dnaSetTemp[[2]] = DNAString("GAGAGAG")source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
DNA
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
dna
PWM(dna)
PWM(dna)
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
w <- DNAStringSet(c("AGGTACTT", "CCATACGT", "ACGTTAGT", "ACGTCCAT", "CCGTACGG"))
W
w
seqLogo(t(t(w) * 1/colSums(w)))
w
seqLogo(t(t(PWM(w)) * 1/colSums(PWM(w))))
pwm
seqLogo(t(t(pwm) * 1/colSums(pwm)))
seqLogo(t(t(PWM(w)) * 1/colSums(PWM(w))))
seqLogo(t(t(pwm) * 1/colSums(pwm)))
dna
w
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
DNA
length(DNA)
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
dna <-(c('a','c','g','t'))
dna
dna[4]
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
dna
dna2 <-(c('a','f','f','t'))
sum(dna != dna2)
d1 = "acgt"
d2 = "afft"
sum(d1 != d2)
sum(d1 != d2 for d1,d2 in d1)
sum(d1 != d2 for d2 in d1)
sum(d1 != d2 for i in d1)
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
source("D:\\Comp2011\\TCC Estagio\\workspace\\teste\\bruteforce.R")
tree?
4522122
?tree
??tree
library(methods)
setClass("foo", representation(a = "character", b = "numeric"))
setClass("bar", representation(d = "numeric", c = "numeric"))
setClass("baz", contains = c("foo", "bar"))
getClass("baz")
x <- new("baz", a = "xxx", b = 5, c = 10)
x
x@a
x@b
x@d
x@c
x
setClass("searchTree", representation(m,numberOfKeys,key,subtree))
setClass("WMayTree", representation(m = "numeric", numberOfKeys = "numeric", key = "object", subtree = "MWayTree"))
setClass("WMayTree", representation(m = "numeric", numberOfKeys = "numeric", key = "numeric", subtree = "numeric"))
setClass("MWayTree", representation(m = "numeric", numberOfKeys = "numeric", key = "character", subtree = "MWayTree"))
